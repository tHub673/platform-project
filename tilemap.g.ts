// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
....................
....................
....................
....................
...2.2..2...........
......22............
......2.............
2222222222..........
....................
....................
....................
....................
....................
.....2222...........
....................
2222222222222222....
..............22222.
.......222222.......
....................
22222222222222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles10,sprites.builtin.forestTiles1], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1e`, img`
..............................
..............................
......................22222222
...................2..22222222
.................2....22222222
..............2.......22222222
........2..........2..22222222
...........2.....2....22222222
.2...2.......2........22222222
.........2......2.....22222222
...2.......2..2.......22222222
......2....2..........22222222
.........2.2..........22222222
...2.2.2...2..........22222222
...........2..........22222222
222........2..........22222222
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.dungeon.hazardLava1,sprites.builtin.brick,sprites.dungeon.hazardSpike,sprites.builtin.forestTiles0,sprites.builtin.forestTiles10], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
....................
............22222222
....................
..........2.........
....................
........22..........
....................
.....2.2............
....................
.....222............
...2................
.........222........
..2.................
............22......
...2.....2222.......
....................
....2..2............
....................
.....2..............
22222222222222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles2,sprites.builtin.forestTiles0,sprites.builtin.forestTiles10], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 
. . . . . . . . . 2 . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 2 . 2 . 2 . . . . . . . 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 2 . . 2 . . 2 . . 2 . . . . . 
. . . . . . . . . . . . 2 . . . 
2 . . . . . . . . . . 2 . . 2 . 
2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . 2 2 
. . . . . . . 2 . . 2 . . 2 . . 
2 2 2 2 . 2 . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath2,sprites.dungeon.hazardLava1,sprites.builtin.brick,sprites.builtin.forestTiles10,sprites.castle.tilePath5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
